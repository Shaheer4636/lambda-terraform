$ErrorActionPreference='Stop'; if (-not (Get-Command terraform -ErrorAction SilentlyContinue)) { if (Get-Command winget -ErrorAction SilentlyContinue) { winget install -e --id HashiCorp.Terraform --accept-source-agreements --accept-package-agreements | Out-Null } elseif (Get-Command choco -ErrorAction SilentlyContinue) { choco install terraform -y | Out-Null } else { throw 'Terraform not installed and winget/choco not found. Install Terraform then rerun.' } }; Compress-Archive -Path "$PWD\lambda_generate_uptime.py" -DestinationPath "$PWD\lambda.zip" -Force; terraform init -upgrade; terraform apply -auto-approve; aws lambda invoke --function-name uptime-uptime-lambda --region us-east-1 --cli-binary-format raw-in-base64-out --payload '{}' out.json | Out-Null; $bucket='lambda-output-report-000000987123'; $prefix='reports/cdp'; $yy=(Get-Date).ToUniversalTime().AddMonths(-1).ToString('yyyy'); $mm=(Get-Date).ToUniversalTime().AddMonths(-1).ToString('MM'); aws s3 ls "s3://$bucket/$prefix/$yy/$mm/" --region us-east-1
